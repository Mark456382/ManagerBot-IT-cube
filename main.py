from config import TOKEN
from buttons import *
from aiogram import Bot, Dispatcher, types, executor
from aiogram.dispatcher.filters import Text


bot = Bot(TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def welcome(message: types.Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {message.from_user.first_name}. "+
                         "–Ø –ë–æ—Ç –ú–µ–Ω–µ–¥–∂–µ—Ä, –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å —Ç–≤–æ–∏–º–∏ –¥–µ–ª–∞–º–∏. "+
                         "–í –∫–∞–∫–æ–π —Å—Ñ–µ—Ä–µ —Ç—ã —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞?", reply_markup=keyboard)


@dp.message_handler(Text('–ë–∏–∑–Ω–µ—Å'))
async def busness(message: types.Message):
    await message.reply('–ö–µ–º —Ç—ã —è–≤–ª—è–µ—à—å—Å—è?', reply_markup=keyboard_1)


@dp.message_handler(Text('–°–µ–º—å—è'))
async def family(message: types.Message):
    ...


@dp.message_handler(Text('–î–ª—è —Å–µ–±—è'))
async def for_self(message: types.Message):
    ...


@dp.message_handler(content_types=['any'])
async def nonetype_message(message: types.Message):
    await message.reply('–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —á—Ç–æ —Ç—ã –æ—Ç –º–µ–Ω—è —Ö–æ—á–µ—à—å üòÖ')

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
